[{"C:\\projects\\lastfm\\src\\App.js":"1","C:\\projects\\lastfm\\src\\components\\Header.js":"2","C:\\projects\\lastfm\\src\\components\\Home.js":"3","C:\\projects\\lastfm\\src\\index.js":"4","C:\\projects\\lastfm\\src\\store\\store.js":"5","C:\\projects\\lastfm\\src\\store\\reducer.js":"6","C:\\projects\\lastfm\\src\\components\\Search.js":"7"},{"size":552,"mtime":1606744922646,"results":"8","hashOfConfig":"9"},{"size":422,"mtime":1606744633030,"results":"10","hashOfConfig":"9"},{"size":1743,"mtime":1607348431581,"results":"11","hashOfConfig":"9"},{"size":300,"mtime":1606922502687,"results":"12","hashOfConfig":"9"},{"size":2120,"mtime":1607350051319,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1606921005939,"results":"14","hashOfConfig":"9"},{"size":1413,"mtime":1607350660856,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l386do",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\projects\\lastfm\\src\\App.js",[],"C:\\projects\\lastfm\\src\\components\\Header.js",[],"C:\\projects\\lastfm\\src\\components\\Home.js",["32"],"import { useEffect } from 'react';\nimport './home.css';\nimport { connect, useDispatch } from 'react-redux';\nimport { loadList, loadArtist, pickArtist } from '../store/store';\n\nfunction Home(props) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    props.loadList();\n  }, [])\n\n  return (\n    <div>\n      {props.currentArtist.name && (\n        <div className='artist-info'>\n          <div className='wrapper'>\n            <h2 className=\"artist\">\n              {props.currentArtist.name}\n              <button className='close' onClick={() => dispatch(pickArtist(''))}>+</button>\n            </h2>\n            <img className='image' src={props.currentArtist.image[5]['#text']} alt=''/>\n            <div className='tags'>\n              {props.currentArtist.tags.tag.map(tag => (\n                <div key={tag.url}><a href={tag.url}>{tag.name}</a></div>\n              ))}\n            </div>\n            <p className='text'>{props.currentArtist.bio.summary}</p>\n          </div>\n        </div>\n      )}\n      {props.list.map(track => (\n        <div className='track' key={track.url}>\n          <a href={track.artist.url}><img className='song-pic' src={track.image[0]['#text']} alt=''/></a>\n          <span>{track.name}</span>\n          <span className='divider'>-</span>\n          <span onClick={() => props.loadArtist(track.artist.name)}><strong>{track.artist.name}</strong></span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  list: state.list,\n  currentArtist: state.currentArtist\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadList: () => dispatch(loadList()),\n  loadArtist: artist => dispatch(loadArtist(artist)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","C:\\projects\\lastfm\\src\\index.js",[],"C:\\projects\\lastfm\\src\\store\\store.js",[],"C:\\projects\\lastfm\\src\\store\\reducer.js",[],"C:\\projects\\lastfm\\src\\components\\Search.js",["33"],"import { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport './search.css';\nimport { setQuery, loadSearchList } from '../store/store';\n\n\nfunction Search(props) {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <form className='search' onSubmit={event => {\n        event.preventDefault();\n        props.loadSearchList(props.query);\n        dispatch(setQuery(''));\n      }}>\n        <input\n          className='search-field'\n          type=\"text\"\n          placeholder='search track'\n          value={props.query}\n          onChange={({ target }) => {\n            props.setQuery(target.value)}}\n        />\n        <button className='search-button'>Search</button>\n      </form>\n      {props.searchList.map(item => (\n        <div className='track' key={Math.random()}>\n          <a href={item.artist.url}><img className='song-pic' src={item.image[0]['#text']} alt='' /></a>\n          <span>{item.name}</span>\n          <span className='divider'>-</span>\n          <span><strong>{item.artist}</strong></span>\n        </div>\n      ))}\n    </>\n  )\n};\n\nconst mapStateToProps = state => ({\n  query: state.query,\n  searchList: state.searchList,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setQuery: query => dispatch(setQuery(query)),\n  loadSearchList: query => dispatch(loadSearchList(query))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n",{"ruleId":"34","severity":1,"message":"35","line":11,"column":6,"nodeType":"36","endLine":11,"endColumn":8,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["42"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",{"desc":"43","fix":"44"},"Update the dependencies array to be: [props]",{"range":"45","text":"46"},[281,283],"[props]"]